source('~/Documents/Chimira-Major Revision/plot_benchmark_results.R')
source('~/Documents/Chimira-Major Revision/plot_benchmark_results.R')
source('~/Documents/Chimira-Major Revision/plot_benchmark_results.R')
?write
source("http://bioconductor.org/workflows.R")
?BiocUpgrade
source("http://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
source("http://bioconductor.org/workflows.R")
sessionInfo()
sessionInfo()
for(i in 0:6){}
for(i in 0:6){ print(i)}
for(i in 0:0){ print i}
for(i in 0:1){ print i}
for(i in 0:1){ print(i)}
for(i in 0:0){ print(i)}
mtcars
rowSums(mtcars)
1/ 999,999,999,999,999,999,999,998,999,999,999,999,999,999,999,999
1/ 999999999999999999999998999999999999999999999999
a = data.frame()
nrow(a)
?dir.create
source('~/Desktop/results_new_beta_TO_FINAL/analyze5p3pMircounts.R')
plot(1:10, 2:11)
princomp(USArrests, cor = TRUE)
USArrests
df = data.frame(type = c(rep("a", 5), rep("b", 5)))
ha = HeatmapAnnotation(df = df, col = list(type = c("a" =  "red", "b" = "blue")))
library(ComplexHeatmap)
install.packages("ComplexHeatma")
install.packages("ComplexHeatmap")
source("https://bioconductor.org/biocLite.R")
biocLite("ComplexHeatmap")
source("https://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("ComplexHeatmap")
biocLite("ComplexHeatmap")
version
source("https://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("ComplexHeatmap")
library(circlize)
install.packages("circlize")
library(ComplexHeatmap)
library(circlize)
library(ComplexHeatmap)
library(circlize)
version
source("http://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite("ComplexHeatmap")
if(1){}
if(1){print("asdf")}
if(0){print("asdf")}
?args
?factor
library(gplots)
?png
?split
x = 'asdf.sff'
split(x, "\.")
split(x, ".")
split(x, "\\.")
a = split(x, "\\.")
a
a = split("\\.", x)
a
?strsplit
a = strsplit("\\.", x)
a
a = strsplit(x, "\\.")
a
a[1]
a[12]
a[12]
a[2]
a[[1]][2]
source('~/Desktop/testt.R')
source('~/Desktop/testt.R')
source('~/Desktop/testt.R')
data
source('~/Desktop/testt.R')
means
source('~/Desktop/testt.R')
means.barplot
source('~/Desktop/testt.R')
source('~/Desktop/testt.R')
head(data)
melted
means
str(melted)
means.sem
melted
y <- rnorm(500, mean=1)
y <- matrix(y,100,5)
y
y.means <- apply(y,2,mean)
y.means
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
a10
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
u1
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
y.sd
y.means
y.sd
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
y.sd
y.means
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
y.sd
y.means
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
y
y.means
y.sd
?td
?sd
y <- rnorm(500)
y <- matrix(y,100,5)
y.means <- apply(y,2,mean)
y.means
y.sd <- apply(y,2,sd)
y.sd
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
u1
a10
y.means = c(15.00358, 13.08832, 28.48029, 19.41903)
y.sd = c(0.5547214, 2.1067297, 0.5348701, 2.4974548)
barx <- barplot(y.means, names.arg=1:4,ylim=c(0,1.5), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx, y.means, y.sd)
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
y.means = c(15.00358, 13.08832, 28.48029, 19.41903)
y.sd = c(0.5547214, 2.1067297, 0.5348701, 2.4974548)
barx <- barplot(y.means, names.arg=1:4,ylim=c(0,30), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx, y.means, y.sd)
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
u1
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
wt_1
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
wt_1
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
wt_2
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
iaps
wt_1
wt_1 = c(wt_1, 'IAPs' = iaps[ rownames(iaps) %in% 'wt_1', ])
wt_1
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
wt_1 = c(wt_1, 'IAPs' = iaps[ rownames(iaps) %in% 'wt_1', ])adsf
ko_2
ko_1
wt_2
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Lina - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Serena - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Serena - (tRNA filtered)/plot_barplots.R')
iaps
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Serena - (tRNA filtered)/plot_barplots.R')
source('~/Dropbox/Anton-Lina/Mapped reads barplots/Serena - (tRNA filtered)/plot_barplots.R')
other_df
source('~/Dropbox/Anton-Lina/ping_pong-signature/lina (tRNA filtered)/plot_ping_pong.R')
source('~/Dropbox/Anton-Lina/ping_pong-signature/serena (tRNA filtered)/plot_ping_pong.R')
source('~/Dropbox/Anton-Lina/A_U_percentages/serena - (tRNA filtered)/plot_barplots.R')
u1
a10
?rep
rep(1,4)
IRanges(start=c(3,5,17), end=c(10,8,20))
library(IRanges)
IRanges(start=c(3,5,17), end=c(10,8,20))
?RleList
?subsetByOverlaps
?subsetByOverlaps
?subsetByOverlaps
?RleList
?subsetByOverlaps
library(IRanges)
?subsetByOverlaps
wt_1.lane.bowtie.conv.GR.RData
a = 'wt_1.lane.bowtie.conv.GR.RData'
s = substr(a, 0, gregexpr("\\.", a))
s = substr(a, 0)
s = substr(a, 0, 10)
?grepexpr
?gregexpr
grepl(".", a)
gregexpr(".", a)
gregexpr(".", a)[[1]]
gregexpr(".", a)[[1]][1]
gregexpr("\\.", a)[[1]][1]
s = substr(a, 0, gregexpr("\\.", a)[[1]][1])
s
s = substr(a, 0, gregexpr("\\.", a)[[1]][1]-1)
s = substr(a, 0, gregexpr("\\.", a)[[1]][1]-1)
s
?order
?ft
?fft
x <- 1:4
fft(x)
plot(fft(x))
?mean
library(e1071)
?tune
?dir.create
?order
?svm
library(e1071)
?svm
?boxplot
?write
data(iris)
attach(iris)
## classification mode
# default with factor response:
model <- svm(Species ~ ., data = iris)
# alternatively the traditional interface:
x <- subset(iris, select = -Species)
y <- Species
model <- svm(x, y, probability = TRUE)
print(model)
summary(model)
# test with train data
pred <- predict(model, x)
library(e1071)
data(iris)
attach(iris)
## classification mode
# default with factor response:
model <- svm(Species ~ ., data = iris)
# alternatively the traditional interface:
x <- subset(iris, select = -Species)
y <- Species
model <- svm(x, y, probability = TRUE)
print(model)
summary(model)
# test with train data
pred <- predict(model, x)
pred
log(10)
log10(10)
?svm
library(e1071)
?svm
?write
?dir.create
?svm.tune
?cforest
library(party)
?cforest
library(h2o)
?h2o.deeplearning
?h2o.init
?h2o.init
?randomForest
library(randomForest)
?randomForest
list.files
?list.files
?predict
?h2o.init
?randomForest
library(randomForest)
source('~/Documents/Anton-Lina (backup 12:07:2016)/Length Distribution/lina_tRNA-filtered/get_length_features.R')
source('~/Documents/Anton-Lina (backup 12:07:2016)/Length Distribution/lina_tRNA-filtered/get_length_features.R')
library(h2o)
?h2o.init
?merge
?write.table
?file.exists
?read.table
?prediction
library(ROCR)
?prediction
library(ROCR)
data(ROCR.simple)
ROCR.simple$predictions
?svm
livrary(e1071)
library(e1071)
?svm
s = 'a'
s = 'α'
σ
s
if(s == 'α'){ print(s)}
if(s == 'αβγ δ'){ print(s)}
s = 'αβγ δ'
if(s == 'αβγ δ'){ print(s)}
if(s == 'αβγ δ ema'){ print(s)}
s = 'αβγ δ ema'
if(s == 'αβγ δ ema'){ print(s)}
?floor
?randomForest
library(randomForest)
?randomForest
library(randomForest)
?randomForest
x <- matrix(runif(500), 100)
y <- gl(2, 50)
x
y
t = table('r' = 3)
t
t = table('r' = 3, 't' = 7)
t
?write.table
rep(100,5)
g = 'ath'
if(f == 'ath') print 'a'
if(f == 'ath') {print 'yes'}
if(g == 'ath') {print 'yes'}
if(g == 'ath') {print('yes')}
if(g in 'ath') {print('yes')}
if(g in c('ath')) {print('yes')}
if(g %in% c('ath')) {print('yes')}
g = 'ath2'
if(g %in% c('ath')) {print('yes')}
if(g %in% c('ath', 'cre', 'ame')) {print('yes')}
g = 'ame'
if(g %in% c('ath', 'cre', 'ame')) {print('yes')}
?list.files
?windows
install.packages("png")
library(png)
?readPNG
?system.file
?plot
?title
a = [1, 2 , 3]
a
a = c(1,2,3)
a
names(a) = c('a', 'b', 'c')
a[1]
a['a']
?write.table
?writeLines
library(gbm)
library(randomForest)
?trainControl
library(caret)
install.packages('caret')
?trainControl
library(caret)
?trainControl
?train
14+62+35+21+23+20+66+65
?intersect
?plot
?boxplot
?cex
??cex
a = c(1:4)
a
a = c(1,2,3,4)
a
?layout
?title
plot(1, col.axis = "sky blue", col.lab = "thistle")
title("Main Title", sub = "sub title",
cex.main = 2,   font.main= 4, col.main= "blue",
cex.sub = 0.75, font.sub = 3, col.sub = "red")
?title
a = c(1,1,1,1,1,2,3,5,5,5,6,7)
unique(a)
?boxplot
boxplot(c(1,2,3,4))
dme	23
mmu	65
dre	21
cel	35
ame	13
cfa	21
bta	62
hsa	67
a = (dme	23
mmu	65
dre	21
cel	35
ame	13
cfa	21
bta	62
hsa	67)
?plot
?rep
?barplot
unlist(strsplit("abc", ""))
a = unlist(strsplit("abc", ""))
str(a)
?axis
?seq
?barplot
?axis
?barplot
?axis
?cex
??cex
?plot
?barplot
color <-  c("blue", "orange", "gold", "indianred", "skyblue4",
"lightblue")
cols <- matrix(data=color[Q], ncol=10)
X <- seq(1:6)
Q <- matrix(sample(X, 60, replace = T), nrow=6, byrow = T)
H <- matrix(rep(1,60), nrow=6, byrow=T)
color <-  c("blue", "orange", "gold", "indianred", "skyblue4",
"lightblue")
cols <- matrix(data=color[Q], ncol=10)
cols
?barplot
?legend
?merge
?write.table
source('~/Desktop/Geuvadis_dataset/geuvadis-chimira-novel/plot.R')
source('~/Desktop/Geuvadis_dataset/geuvadis-chimira-novel/plot.R')
setwd("~/Desktop/Geuvadis_dataset/geuvadis-chimira-novel/plot.R")
?barplot
?heatmap.2
library(gplot)
library(gplot)
library(gplots)
?heatmap.2
?hclust
?as.phylo
library(ape)
?as.phylo
?ceil
install.package('Blossom')
install.packages('Blossom')
library(Blossom)
?Blossom
??Blossom
a = matrix(c(0.8758621, 0.7837838), c(0.8664596, 0.6830835), c(0.8472033, 0.6928896))
a
aa = matrix(c(0.8758621, 0.7837838, 0.8664596, 0.6830835, 0.8472033, 0.6928896, nrow=3, ncol=2)
a
a = matrix(c(0.8758621, 0.7837838, 0.8664596, 0.6830835, 0.8472033, 0.6928896, nrow=3, ncol=2))
a
a = matrix(c(0.8758621, 0.7837838, 0.8664596, 0.6830835, 0.8472033, 0.6928896), nrow=3, ncol=2)
a
a = matrix(c(0.8758621, 0.8664596, 0.8472033, 0.7837838, 0.6830835, 0.6928896), nrow=3, ncol=2)
a
sp(data)
sp(a)
bgrouse
a
df = data.frame('type'=c(0.8758621, 0.8664596, 0.8472033), 'val'=c(0.7837838, 0.6830835, 0.6928896))
df
bgrouse
df
coverage(variable=df$val, group=df$type)
df
df = data.frame('type'=c('ctrl', 'ctrl', 'ctrl', 'mut', 'mut', 'mut'), 'val'=c(0.8758621, 0.8664596, 0.8472033, 0.7837838, 0.6830835, 0.6928896))
df
coverage(variable=df$val, group=df$type)
df
coverage(variable=df$val, group=df$type)
coverage(variable=df$val, group=df$type, number.perms = 10000,
save.test = TRUE)
str(bgrouse)
df = data.frame('type'=c(0, 0, 0, 1, 1, 1), 'val'=c(0.8758621, 0.8664596, 0.8472033, 0.7837838, 0.6830835, 0.6928896))
coverage(variable=df$val, group=df$type, number.perms = 10000,
save.test = TRUE)
out = coverage(variable=df$val, group=df$type, number.perms = 10000,
save.test = TRUE)
summary(out)
pvalue(out)
? bgrouse
bgrouse
install.package('coin')
install.packages('coin')
?seq
?write.table
?abline
?smooth.spline
install.packages("knitr")
install.packages("rmarkdown")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
